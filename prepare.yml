- name: Local Repository Playbook
  hosts: localhost
  connection: local
  gather_facts: true

  vars:
    software_config_json_file: "input/software_config.json"
    Software_list: "{{ lookup('ansible.builtin.env', 'softwarelist').split(',') }}"
    versions: "{{ lookup('ansible.builtin.env', 'versions') }}"
    os_version: "{{ lookup('ansible.builtin.env', 'os_version') }}"
    bcm_roce_version: "{{ lookup('ansible.builtin.env', 'bcm_roce_version') }}"
    cluster_os_type : "{{ lookup('ansible.builtin.env', 'cluster_os_type ') }}"
    cluster_os_version: "{{ lookup('ansible.builtin.env', 'cluster_os_version') }}"
    repo_config: "{{ lookup('ansible.builtin.env', 'repo_config') }}"
    softwares: "{{ lookup('ansible.builtin.env', 'softwares') }}"        
    bcm_roce: "{{ lookup('ansible.builtin.env', 'bcm_roce') }}"
    amdgpu: "{{ lookup('ansible.builtin.env', 'amdgpu') }}"
    pytorch: "{{ lookup('ansible.builtin.env', 'pytorch') }}"
    tensorflow: "{{ lookup('ansible.builtin.env', 'tensorflow') }}"


  tasks:
 #   - name: Print all available facts
 #    ansible.builtin.debug:
 #       var: ansible_facts

    - name: generate input file using jinja2 as per input variables
      ansible.builtin.template:
        src: "{{ ansible_distribution | lower }}_software_config.json_bkp2.j2"
        dest: "{{ software_config_json_file }}"